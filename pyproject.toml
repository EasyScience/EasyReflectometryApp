[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[project]
name = 'EasyReflectometryApp'
version = '1.0.0'
release_data = '24 December 2024'
description = "Making reflectometry data analysis and modelling easy."
authors = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"}, 
    {name = "Andrew Sazonov"}, 
    {name = "Simon Ward"},
    {name = "Andreas Pedersen", email = "andreas.pedersen@ess.eu"}
]
maintainers = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"},
    {name = "Andreas Pedersen", email = "andreas.pedersen@ess.eu"}
]
license = {file = 'LICENSE'}
classifiers = [
  'Development Status :: 4 - Beta',
  'License :: OSI Approved :: BSD License',
  'Programming Language :: Python :: 3',
  'Operating System :: MacOS',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: POSIX :: Linux'
]

requires-python = '>=3.11'
dependencies = [
  'EasyApp @ git+https://github.com/EasyScience/EasyApp.git@develop',
  'easyreflectometry',
  'PySide6==6.6',
  'toml',
]

[project.optional-dependencies]
ci = [
  'pyinstaller'
#  'requests',
#  'licensename',
#  'dephell_licenses'
]

[project.urls]
homepage = 'https://easyreflectometry.org'
issues = 'https://github.com/EasyScience/EasyReflectometryApp/issues'
license = 'https://github.com/EasyScience/EasyReflectometryApp/blob/master/LICENSE.md'
documentation = 'https://easyscience.github.io/EasyReflectometryApp/'
dependencies = 'https://github.com/EasyScience/EasyReflectometryApp/blob/master/DEPENDENCIES.md'

[tool.hatch.build.targets.wheel]
packages = ['src/EasyReflectometryApp']

# To allow dependencies residing in git 
[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 127
exclude = [
    "docs",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
# allow asserts in test files
"*test_*.py" = ["S101"]

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
    # flake8 settings from existing CI setup
    "E9", "F63", "F7", "F82",
    # Code should be polished to fulfill all cases below
    # https://docs.astral.sh/ruff/rules/
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
#    "UP",
    # flake8-bugbear
#    "B",
    # flake8-simplify
#    "SIM",
    # isort
    "I",
    # flake8-bandit
    "S",
]

[tool.ruff.lint.isort]
force-single-line = true

[ci.project.subdirs]
scripts = 'tools/Scripts'
download = 'ci/download'
build = 'ci/build'
distribution = 'ci/distribution'
# docs = { src = 'docs', dest = 'Documentation' }

[ci.qtifw.setup]
version = '4.7.0'
https_mirrors = ['qt.mirror.constant.com', 'ftp.fau.de/qtproject', 'mirrors.dotsrc.org/qtproject']
base_path = 'official_releases/qt-installer-framework'
file_name_base = 'QtInstallerFramework'
file_platform = { macos = 'macOS-x64', ubuntu = 'linux-x64', windows = 'windows-x64' }
file_ext = { macos = 'dmg', ubuntu = 'run', windows = 'exe' }
installation_path = { macOS = '/Users/runner/Qt', Linux = '/home/runner/Qt', Windows = 'C:\Qt' }