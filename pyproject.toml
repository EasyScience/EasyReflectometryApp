[build-system]
# Use hatch to build the application. 
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
# Information about the EasyReflectometryApp project.
# Note that while the project is called EasyReflectometryApp
# the application itself is EasyReflectometry. 
name = "EasyReflectometry"
version = "0.0.5-beta"
description = "Making reflectometry data analysis and modelling easy."
authors = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"}, 
    {name = "Andrew Sazonov"}, 
    {name = "Simon Ward"}
]
maintainers = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"}
]
license = "BSD-3-Clause"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Development Status :: 3 - Alpha"
]
requires-python = ">=3.8,<3.11"
dependencies = [
    'pyobjc-core>=7.1; platform_system == "Darwin"',
    'darkdetect>=0.3.1',
    'pyobjc-framework-cocoa>=7.1; platform_system == "Darwin"',
    'matplotlib>=3.4.2',
    'EasyReflectometryLib @ git+https://github.com/easyScience/EasyReflectometryLib.git@develop',
    'easyApp @ git+https://github.com/easyScience/easyApp.git@develop',
    'toml>=0.10.2'
]

[project.optional-dependencies]
# These optional dependencies are for building the
# application as a part of a Github Action.
ci = [
    'pyinstaller==5.9.0',
    'pywin32-ctypes>=0.2.0; platform_system == "win32"', 
    'pypiwin32>=223; platform_system == "win32"',
    'pefile>=2022.5.30; platform_system == "win32"',
    'dephell_licenses>=0.1.7',
    'scipy==1.6.1'
]
docs = [
    'sphinx==4.5.0',
    'pydata-sphinx-theme==0.4.3',
    'myst_parser==0.18.1'
]

[project.urls]
homepage = 'https://easyreflectometry.org'
documentation = 'https://easyreflectometry.org'
changelog = 'https://github.com/easyScience/EasyReflectometryApp/blob/main/CHANGELOG.md'

[project.scripts]
# This allows EasyReflectometry to be run from the command
# line after being installed by pip. 
EasyReflectometry = "EasyReflectometryApp.main:main"

[project.gui-scripts]
EasyReflectometry = "EasyReflectometryApp.main:main"

[tool.hatch.metadata]
# This allows for local and git references in dependencies.
allow-direct-references = true

[tool.hatch.build]
include = ['EasyReflectometryApp']

[tool.hatch.build.force-include]
# Ensuring the pyproject.toml is included at install.
'pyproject.toml' = 'EasyReflectometryApp/pyproject.toml'

[tool.coverage.run]
source = ['EasyReflectometryApp']


##########################################################
##########################################################
############## CI CONFIGURATION INFORMATION ##############
##########################################################
##########################################################

# The content in this section is related to how the 
# application is built on the Github action. Users of 
# EasyReflectometry shouldn't worry about this content. 

[ci.icon]
dir = ['Gui', 'Resources', 'Logo']
file_name = 'App'
file_ext = { macos = '.icns', ubuntu = '.png', windows = '.ico' }

[ci.setup]
build_dir_suffix = 'Setup'
repository_dir_suffix = 'Repos'
os = { macos = 'macOS', ubuntu = 'Linux', windows = 'Windows' }
arch = { macos = 'x86-64', ubuntu = 'x86-64', windows = 'x86-32' }
file_ext = { macos = '.app', ubuntu = '', windows = '.exe' }
maintenance_tool_suffix = 'MaintenanceTool'
maintenance_file = 'signedmaintenancetool.exe'
license_file = 'LICENSE.md'
installation_dir_shortcut = { macos = '@ApplicationsDir@', ubuntu = '@HomeDir@', windows = '@ApplicationsDirX86@' }
changelog_file = 'CHANGELOG.md'

[ci.setup.build]
config_dir = 'config'
config_xml = 'config.xml'
packages_dir = 'packages'
data_subsubdir = 'data'
meta_subsubdir = 'meta'
package_xml = 'package.xml'
app_package_subdir = 'app'

[ci.subdirs]
scripts = 'tools/Scripts'
docs = { src = 'docs', dest = 'Documentation' }
examples = { src = 'examples', dest = 'Examples' }
tutorials = 'docs/UserManual/VideoTutorials'
download = '.ci/download'
screenshots = '.ci/screenshots'
build = '.ci/build'
distribution = '.ci/distribution'
certificates_path = 'Certificates'
certificate_name = 'ESS_cert'

[ci.scripts]
silent_install = 'SilentInstall.js'
package_install = 'InstallerInstallScript.js'
config_control = 'InstallerControlScript.js'
config_style = 'style.qss'

[ci.qtifw]
version = '4.1.0'
https_mirrors = ['download.qt.io', 'ftp.fau.de/qtproject', 'mirrors.dotsrc.org/qtproject']
base_path = 'official_releases/qt-installer-framework'
file_name_base = 'QtInstallerFramework'
file_platform = { macos = 'macOS-x86_64', ubuntu = 'linux-x64', windows = 'windows-x86' }
file_ext = { macos = 'dmg', ubuntu = 'run', windows = 'exe' }
installation_path = { macOS = '/Users/runner/Qt', Linux = '/home/runner/Qt', Windows = 'C:\Qt' }

[ci.pyinstaller]
separator = { macos = ':', ubuntu = ':', windows = ';' }
dir_suffix = { macos = '.app', ubuntu = '', windows = '' }
content_suffix = { macos = 'Contents/MacOS/', ubuntu = '', windows = '' }
missing_pyside2_files = { macos = ['libshiboken2.abi3.*.dylib'], ubuntu = [], windows = ['shiboken2.abi3.dll', 'MSVCP140.dll'] }
missing_pyside2_plugins = { macos = [], ubuntu = ['Qt/plugins/xcbglintegrations'], windows = [] } # EGL and GLX plugins
missing_other_libraries = {macos = [], ubuntu = [], windows = ['libs/libiomp5md.dll', 'libs/opengl32.dll'] }
auto_exclude = { macos = ['_tkinter'], ubuntu = ['_tkinter'], windows = [''], all = [ 'lib2to3', '_bisect',
                '_codecs_cn', '_codecs_hk', '_codecs_iso2022', '_codecs_jp', '_codecs_kr', '_codecs_tw',
                '_curses', '_elementtree', '_hashlib', '_heapq', '_multibytecodec', '_multiprocessing',
                '_opcode', '_queue', '_opcode', '_uuid', '_win32sysloader', 'grp', 'readline', 'termios' ] }
manual_exclude = [ 'mfc*', 'msvcp*', 'VCRUNTIME*',
                   '*Qt*3D*', '*Qt*Bluetooth*', '*Qt*Bodymovin*', '*Qt*Gamepad*', '*Qt*Location*',
                   '*Qt*Nfc*', '*Qt*Purchasing*', '*Qt*QuickParticles*', '*Qt*QuickShapes*', '*Qt*RemoteObjects*',
                   '*Qt*Scxml*', '*Qt*Sensors*', '*Qt*Sql*', '*Qt*VirtualKeyboard*', '*Qt*Wayland*' ]

[ci.ftp]
host = 'easydiffraction.org'
port = 21
user = 'u652432322.easyreflectometry_ci'
prefix = 'download'
remote_subdir = 'onlineRepository'
user_repo = 'u652432322.easyreflectometry_repo'
