[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[project]
name = 'EasyReflectometryApp'
version = '1.0.0'
release_data = '24 December 2024'
description = "Making reflectometry data analysis and modelling easy."
authors = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"}, 
    {name = "Andrew Sazonov"}, 
    {name = "Simon Ward"},
    {name = "Andreas Pedersen", email = "andreas.pedersen@ess.eu"}
]
maintainers = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"},
    {name = "Andreas Pedersen", email = "andreas.pedersen@ess.eu"}
]
license = {file = 'LICENSE.md'}
classifiers = [
  'Development Status :: 4 - Beta',
  'License :: OSI Approved :: BSD License',
  'Programming Language :: Python :: 3',
  'Operating System :: MacOS',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: POSIX :: Linux'
]

requires-python = '>=3.11'
dependencies = [
  'EasyApp @ git+https://github.com/EasyScience/EasyApp.git@develop',
  'easyreflectometry',
  'PySide6==6.6',
  'toml',
]

[project.optional-dependencies]
ci = [
  'pyinstaller',
#  'requests',
  'licensename',
  'dephell_licenses'
]

[release]
app_name = 'EasyReflectometry'
family_name = 'EasyScience'
tag_template = 'v{VERSION}'
title_template = 'Version {VERSION} ({DATE})'
description_file = 'RELEASE.md'
changelog_file = 'CHANGELOG.md'
homepage = 'https://easyreflectometry.org'

[project.urls]
homepage = 'https://easyreflectometry.org'
issues = 'https://github.com/EasyScience/EasyReflectometryApp/issues'
license = 'https://github.com/EasyScience/EasyReflectometryApp/blob/master/LICENSE.md'
documentation = 'https://easyscience.github.io/EasyReflectometryApp/'
dependencies = 'https://github.com/EasyScience/EasyReflectometryApp/blob/master/DEPENDENCIES.md'

[tool.hatch.build.targets.wheel]
packages = ['EasyReflectometryApp']

# To allow dependencies residing in git 
[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 127
exclude = [
    "docs",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
# allow asserts in test files
"*test_*.py" = ["S101"]

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
    # flake8 settings from existing CI setup
    "E9", "F63", "F7", "F82",
    # Code should be polished to fulfill all cases below
    # https://docs.astral.sh/ruff/rules/
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
#    "UP",
    # flake8-bugbear
#    "B",
    # flake8-simplify
#    "SIM",
    # isort
    "I",
    # flake8-bandit
    "S",
]

[tool.ruff.lint.isort]
force-single-line = true

##########################################################
##########################################################
############## CI CONFIGURATION INFORMATION ##############
##########################################################
##########################################################

[ci.project]
license_file = 'LICENSE.md' # how to combine this with tool.poetry.license???

[ci.scripts]
silent_install = 'SilentInstall.js'
package_install = 'InstallerInstallScript.js'
config_control = 'InstallerControlScript.js'
config_style = 'style.qss'

[ci.project.subdirs]
scripts = 'tools/Scripts'
download = 'ci/download'
build = 'ci/build'
distribution = 'ci/distribution'
# docs = { src = 'docs', dest = 'Documentation' }

[ci.qtifw.setup]
version = '4.7.0'
https_mirrors = ['qt.mirror.constant.com', 'ftp.fau.de/qtproject', 'mirrors.dotsrc.org/qtproject']
base_path = 'official_releases/qt-installer-framework'
file_name_base = 'QtInstallerFramework'
file_platform = { macos = 'macOS-x64', ubuntu = 'linux-x64', windows = 'windows-x64' }
file_ext = { macos = 'dmg', ubuntu = 'run', windows = 'exe' }
installation_path = { macOS = '/Users/runner/Qt', Linux = '/home/runner/Qt', Windows = 'C:\Qt' }

[ci.app.icon]
dir = ['Gui', 'Resources', 'Logo']
file_name = 'App'
file_ext = { macos = '.icns', ubuntu = '.png', windows = '.ico' }

[ci.app.setup]
build_dir_suffix = 'Setup'
repository_dir_suffix = 'Repos'
os = { macos = 'macOS', ubuntu = 'Linux', windows = 'Windows' }  # Should be the same as GH actions ${{ runner.os }}
arch = { macos = 'x64', ubuntu = 'x64', windows = 'x64' }
file_ext = { macos = '.app', ubuntu = '', windows = '.exe' }
maintenance_tool_suffix = 'MaintenanceTool'
maintenance_file = 'signedmaintenancetool.exe'
installation_dir_shortcut = { macos = '@ApplicationsDir@', ubuntu = '@HomeDir@', windows = '@ApplicationsDirX86@' }

[ci.app.setup.build]
# config
config_dir = 'config'
config_xml = 'config.xml'
# packages
packages_dir = 'packages'
data_subsubdir = 'data'
meta_subsubdir = 'meta'
package_xml = 'package.xml'
# package: app
app_package_subdir = 'app'
# package: docs
#docs_package_subdir = 'docs'
#docs_package_subdir = 'docs'
#docs_package_name = 'Documentation'
#docs_package_description = 'Documentation: User manual, text and video tutorials'
#docs_package_version = '2020.7.11'

[ci.pyinstaller]
separator = { macos = ':', ubuntu = ':', windows = ';' }
dir_suffix = { macos = '.app', ubuntu = '', windows = '' }
content_suffix = { macos = 'Contents/MacOS/', ubuntu = '', windows = '' }
libs = { macos = 'libsDarwin', ubuntu = 'libsLinux', windows = 'libsWin32' }
missing_calculator_libs = { macos = [], ubuntu = [], windows = [] }
missing_pyside6_files = { macos = ['libshiboken6.abi3.*.dylib'], ubuntu = [], windows = ['shiboken6.abi3.dll', 'MSVCP140.dll'] }
missing_pyside6_plugins = { macos = [], ubuntu = ['Qt/plugins/xcbglintegrations'], windows = [] } # EGL and GLX plugins
missing_other_libraries = {macos = [], ubuntu = [], windows = ['libs/libiomp5md.dll', 'libs/opengl32.dll', 'libs/VC_redist.x64.exe'] }
auto_exclude = { macos = ['_tkinter'], ubuntu = ['_tkinter'], windows = [''], all = [ 'lib2to3', '_bisect',
                '_codecs_cn', '_codecs_hk', '_codecs_iso2022', '_codecs_jp', '_codecs_kr', '_codecs_tw',
                '_curses', '_elementtree', '_hashlib', '_heapq', '_multibytecodec', '_opcode', '_queue',
                '_opcode', '_uuid', '_win32sysloader', 'grp', 'readline', 'termios' ] }
manual_exclude = [ 'mfc*', 'msvcp*', 'VCRUNTIME*', '*Qt*Bluetooth*', '*Qt*Bodymovin*', '*Qt*Gamepad*', '*Qt*Location*',
                   '*Qt*Nfc*', '*Qt*Purchasing*', '*Qt*QuickParticles*', '*Qt*QuickShapes*', '*Qt*RemoteObjects*',
                   '*Qt*Scxml*', '*Qt*Sensors*', '*Qt*Sql*', '*Qt*VirtualKeyboard*', '*Qt*Wayland*' ]

[ci.app.setup.ftp]
host = 'ftp.easydiffraction.org'
port = 21
user = 'u652432322.ci'
prefix = 'download'
repo_subdir = 'onlineRepository'
